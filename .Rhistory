#Creating vectors for the data
Unit <- c(1, 2, 3, 4)
X <- c(10, 50, 70, 90)
Y1 <- c(20, 60, 80, 100)
Y0 <- c(15, 55, 75, 95)
Y1-Y0
mean(Y1-Y0)
#3b
?matrix
#3b
matrix(1100 1010 1001 0110 0101 0011, nrow=6, ncol=1)
#3b
matrix(1100, 1010, 1001, 0110, 0101, 0011, nrow=6, ncol=1)
#3b
#put numbers in a vector
AVs <- c(1,1,0,0,1,0,1,0,1,0,0,1,0,1,1,0,0,1,0,1,0,0,1,1)
matrix(AVs, nrow=6, ncol=4)
matrix(AVs, nrow=6, ncol=4, byrow=TRUE)
?which
which(Y1,1)
getwd()
d <- read.csv(file="mita.csv", header=TRUE)
mita <- read.csv(file="mita.csv", header=TRUE)
head(mita)
head(mita)
x2<-(mita$x)^2
y2
y2<-(mita$y)^2
xy<-<-(mita$x)*(mita$y)
y2<-(mita$y)^2
xy<-(mita$x)*(mita$y)
x3<-(mita$x)^3
y3<-(mita$y)^3
x2y<-((mita$x)^2)*(mita$y)
xy2<-(mita$x)*((mita$y)^2)
lm1<-lm(lhhequiv~pothuan-mita, data=mita)
head(mita)
lm1<-lm(lhhequiv~pothuan_mita, data=mita)
lm1<-lm(lhhequiv~pothuan_mita+x2+y2+xy+x3+y3+x2y+xy2+elv_sh+slope+infants+children+adults+bfe4_1+bfe4_2+bfe4_3, data=mita)
summary(lm1)
summary(lm1,cluster=c("district"))
mita100<-mita[mita$d_bnd<100]
mita100<-mita[mita$d_bnd<100,]
lm1<-lm(lhhequiv~pothuan_mita+x2+y2+xy+x3+y3+x2y+xy2+elv_sh+slope+infants+children+adults+bfe4_1+bfe4_2+bfe4_3, data=mita100)
mita100<-mita[mita$d_bnd<100,]
lm1<-lm(lhhequiv~pothuan_mita+x2+y2+xy+x3+y3+x2y+xy2+elv_sh+slope+infants+children+adults+bfe4_1+bfe4_2+bfe4_3, data=mita100)
summary(lm1,cluster=c("district"))
mita75<-mita[mita$d_bnd<75,]
lm2<-lm(lhhequiv~pothuan_mita+x2+y2+xy+x3+y3+x2y+xy2+elv_sh+slope+infants+children+adults+bfe4_1+bfe4_2+bfe4_3, data=mita75)
summary(lm2,cluster=c("district"))
lm2<-lm(lhhequiv~pothuan_mita+x2+y2+xy+x3+y3+x2y+xy2+elv_sh+slope+infants+children+adults+bfe4_1+bfe4_2+bfe4_3, data=mita75)
lm2<-lm(lhhequiv~pothuan_mita+x2+y2+xy+x3+y3+x2y+xy2+elv_sh+slope+infants+children+adults+bfe4_1+bfe4_2+bfe4_3,data=mita75)
mita100<-mita[mita$d_bnd<100,]
x2<-(mita100$x)^2
y2<-(mita100$y)^2
xy<-(mita100$x)*(mita$y)
x3<-(mita100$x)^3
y3<-(mita100$y)^3
x2y<-((mita100$x)^2)*(mita$y)
xy2<-(mita100$x)*((mita$y)^2)
lm1<-lm(lhhequiv~pothuan_mita+x2+y2+xy+x3+y3+x2y+xy2+elv_sh+slope+infants+children+adults+bfe4_1+bfe4_2+bfe4_3, data=mita100)
summary(lm1,cluster=c("district"))
x2<-(mita75$x)^2
y2<-(mita75$y)^2
xy<-(mita75$x)*(mita$y)
x3<-(mita75$x)^3
y3<-(mita75$y)^3
x2y<-((mita75$x)^2)*(mita$y)
xy2<-(mita75$x)*((mita$y)^2)
x2<-(mita75$x)^2
y2<-(mita75$y)^2
xy<-(mita75$x)*(mita75$y)
x3<-(mita75$x)^3
y3<-(mita75$y)^3
x2y<-((mita75$x)^2)*(mita75$y)
xy2<-(mita75$x)*((mita75$y)^2)
mita75<-mita[mita$d_bnd<75,]
lm2<-lm(lhhequiv~pothuan_mita+x2+y2+xy+x3+y3+x2y+xy2+elv_sh+slope+infants+children+adults+bfe4_1+bfe4_2+bfe4_3,data=mita75)
summary(lm2,cluster=c("district"))
x2<-(mita50$x)^2
y2<-(mita50$y)^2
xy<-(mita50$x)*(mita75$y)
x3<-(mita50$x)^3
y3<-(mita50$y)^3
x2y<-((mita50$x)^2)*(mita50$y)
xy2<-(mita50$x)*((mita50$y)^2)
mita50<-mita[mita$d_bnd<50,]
x2<-(mita50$x)^2
y2<-(mita50$y)^2
xy<-(mita50$x)*(mita75$y)
x3<-(mita50$x)^3
y3<-(mita50$y)^3
x2y<-((mita50$x)^2)*(mita50$y)
xy2<-(mita50$x)*((mita50$y)^2)
lm3<-lm(lhhequiv~pothuan_mita+x2+y2+xy+x3+y3+x2y+xy2+elv_sh+slope+infants+children+adults+bfe4_1+bfe4_2+bfe4_3, data=mita50)
summary(lm3,cluster=c("district"))
xy<-(mita50$x)*(mita50$y)
lm3<-lm(lhhequiv~pothuan_mita+x2+y2+xy+x3+y3+x2y+xy2+elv_sh+slope+infants+children+adults+bfe4_1+bfe4_2+bfe4_3, data=mita50)
summary(lm3,cluster=c("district"))
x2<-(mita75$x)^2
y2<-(mita75$y)^2
xy<-(mita75$x)*(mita75$y)
x3<-(mita75$x)^3
y3<-(mita75$y)^3
x2y<-((mita75$x)^2)*(mita75$y)
xy2<-(mita75$x)*((mita75$y)^2)
lm2<-lm(lhhequiv~pothuan_mita+x2+y2+xy+x3+y3+x2y+xy2+elv_sh+slope+infants+children+adults+bfe4_1+bfe4_2+bfe4_3,data=mita75)
summary(lm2,cluster=c("district"))
lm2<-lm(lhhequiv~pothuan_mita+x2+y2+xy+x3+y3+x2y+xy2+elv_sh+slope+infants+children+adults+bfe4_1+bfe4_2+bfe4_3,data=mita75)
summary(lm2,cluster=c("district"))
lm4<-lm(lhhequiv~pothuan_mita+dpot+dpot^2+dpot^3+elv_sh+slope+infants+children+adults+bfe4_1+bfe4_2+bfe4_3, data=mita100)
summary(lm4,cluster=c("district"))
lm5<-lm(lhhequiv~pothuan_mita+dpot+dpot^2+dpot^3+elv_sh+slope+infants+children+adults+bfe4_1+bfe4_2+bfe4_3, data=mita75)
summary(lm5,cluster=c("district"))
summary(lm5,cluster=c("district"))
lm6<-lm(lhhequiv~pothuan_mita+dpot+dpot^2+dpot^3+elv_sh+slope+infants+children+adults+bfe4_1+bfe4_2+bfe4_3, data=mita50)
summary(lm6,cluster=c("district"))
lm6<-lm(lhhequiv~pothuan_mita+dpot+dpot^2+dpot^3+elv_sh+slope+infants+children+adults+bfe4_1+bfe4_2+bfe4_3, data=mita50)
summary(lm6,cluster=c("district"))
?power.t.test()
power.t.test(delta=0.07, sd=0.05, type="two.sample")
power.t.test(delta=0.07, sd=0.05, power=0.8, type="two.sample")
power.t.test(delta=0.7, sd=0.5, power=0.8, type="two.sample")
power.t.test(delta=0.17, sd=0.05, power=0.8, type="two.sample")
power.t.test(delta=-555.21, sd=804.86, power=0.8, type="two.sample")
git
git
PATH
where git
#Loading in libraries U PROLLY DIDN'T USE THEM ALL SO CHECK
library(rgdal)
library(tidyverse)
library(dplyr)
library(stringr)
library(tmap)
library(tmaptools)
library(shinyjs)
library(RColorBrewer)
library(leaflet)
library(scales)
library(viridis)
library(maptools)
#Let's start by setting up working directories and loading in files.
#Load in raw precinct voting data for US senate and house from MA state:
setwd("~/GitHub/elections-map")
fed <- read.csv("mass_federal.csv")
#Loading in a precincts crosswalk file I created between Mass state shapefile data and cleaned MEDSL Mass data:
pxwalk <- read.csv("precincts_crosswalk.csv")
#Reading in and exploring shape file/GIS data from Mass Gov:
setwd("C:/Users/User/Documents/MA_project/wardsprecincts_poly")
magis <- readOGR("WARDSPRECINCTS_POLY.shp")
magis@data
#Now let's subset out US Senate data, of which election results are what we focus on in this project:
MAsen <- fed[fed$office=="US Senate" & (fed$name=="Elizabeth A. Warren" | fed$name=="Geoff Diehl"),]
#NOTE: In orer to simplify the visualisation process, I removed data regarding votes for the independent senate candidate, blank votes, and votes titled "all other". Treating the race as a purely bipartisan and only looking at the subset of people who voted for Warren or Diehl race may lead to inaccuracies or misleading ideas, but the median percentage of votes that didn't go to these two candidates per town is 5.2% which is low and may not affect results too heavily.
#Creating variable to join with crosswalk and shape file
WP <- case_when(!MAsen$ward=="-" ~ paste(MAsen$ward,MAsen$precinct,sep="-"),
TRUE ~ as.character(MAsen$precinct))
MAsen$xwalk<-paste(MAsen$town,WP,sep=" ")
#Summing votes in each precinct for Elizabeth Warren
warren<-aggregate(MAsen$votes[MAsen$name=="Elizabeth A. Warren"], by=list(Category=MAsen$xwalk[MAsen$name=="Elizabeth A. Warren"]), FUN=sum)
colnames(warren) <- c("Town", "Votes for Elizabeth A. Warren")
#Summing votes in each precinct for Geoff Diehl
diehl<-aggregate(MAsen$votes[MAsen$name=="Geoff Diehl"], by=list(Category=MAsen$xwalk[MAsen$name=="Geoff Diehl"]), FUN=sum)
colnames(diehl) <- c("Town", "Votes for Geoff Diehl")
#Summing total votes in each precinct (pretending the only two candidates were Warren and Diehl)
total<-aggregate((MAsen$votes), by=list(Category=MAsen$xwalk), FUN=sum)
colnames(total) <- c("Town", "Total Votes")
#Calculating proportions of votes in each town
warrenproportion <- warren$`Votes for Elizabeth A. Warren`/total$`Total Votes` * 100
warrenproportion <- round(warrenproportion,1)
diehlproportion <- diehl$`Votes for Geoff Diehl`/total$`Total Votes` * 100
diehlproportion <- round(diehlproportion,1)
votes<-cbind(warren$`Town`,warren$`Votes for Elizabeth A. Warren`,diehl$`Votes for Geoff Diehl`,total$`Total Votes`, warrenproportion,diehlproportion)
colnames(votes) <- c("xwalk", "Votes for Elizabeth A. Warren", "Votes for Geoff Diehl", "Total Votes", "Percentage of Votes for Warren", "Percentage of Votes for Diehl")
#Attribute joining precinct vote data to GIS data
magis@data<-left_join(magis@data,pxwalk,by=c('WP_NAME'='gis_precincts'))
votes<-as.data.frame(votes)
magis@data<-left_join(magis@data,votes,by=c('medsl_precinct_1'='xwalk'))
#Mapping
#magis@data<-rbind(magis@data[1:2033,],magis@data[2035:2152,],magis@data[2034,])
#magis@data<-magis@data[order(magis@data$`Percentage of Votes for Warren`),]
magis@data$`Percentage of Votes for Warren`<-gsub(100,NA,magis@data$`Percentage of Votes for Warren`)
MyPal <- c('#FFCBCB','#CCE5FF','#3399FF','#1F52FC','#0000CC')
tm_shape(magis)+
tm_polygons("Percentage of Votes for Warren", id=c("WP_NAME"), palette=MyPal, popup.vars=c("% of votes for Elizabeth Warren"="Percentage of Votes for Warren", "# of votes for Elizabeth Warren"="Votes for Elizabeth A. Warren", "# of votes for Geoff Diehl"="Votes for Geoff Diehl"),legend.show=FALSE)+
tmap_options(max.categories = 5)
tmap_mode("view")
tmap_last()
#Let's start by setting up working directories and loading in files.
#Load in raw precinct voting data for US senate and house from MA state:
getwd()
#Loading in libraries U PROLLY DIDN'T USE THEM ALL SO CHECK
library(rgdal)
library(tidyverse)
library(dplyr)
library(stringr)
library(tmap)
library(tmaptools)
library(shinyjs)
library(RColorBrewer)
library(leaflet)
library(scales)
library(viridis)
library(maptools)
#Let's start by setting up working directories and loading in files.
#Load in raw precinct voting data for US senate and house from MA state:
setwd("C:/Users/User/Documents/GitHub/elections-map/elections-map")
fed <- read.csv("mass_federal.csv")
#Loading in a precincts crosswalk file I created between Mass state shapefile data and cleaned MEDSL Mass data:
pxwalk <- read.csv("precincts_crosswalk.csv")
#Reading in and exploring shape file/GIS data from Mass Gov:
setwd("C:/Users/User/Documents/GitHub/elections-map/elections-map/wardsprecincts_poly")
magis <- readOGR("WARDSPRECINCTS_POLY.shp")
magis@data
#Now let's subset out US Senate data, of which election results are what we focus on in this project:
MAsen <- fed[fed$office=="US Senate" & (fed$name=="Elizabeth A. Warren" | fed$name=="Geoff Diehl"),]
#NOTE: In orer to simplify the visualisation process, I removed data regarding votes for the independent senate candidate, blank votes, and votes titled "all other". Treating the race as a purely bipartisan and only looking at the subset of people who voted for Warren or Diehl race may lead to inaccuracies or misleading ideas, but the median percentage of votes that didn't go to these two candidates per town is 5.2% which is low and may not affect results too heavily.
#Creating variable to join with crosswalk and shape file
WP <- case_when(!MAsen$ward=="-" ~ paste(MAsen$ward,MAsen$precinct,sep="-"),
TRUE ~ as.character(MAsen$precinct))
MAsen$xwalk<-paste(MAsen$town,WP,sep=" ")
#Summing votes in each precinct for Elizabeth Warren
warren<-aggregate(MAsen$votes[MAsen$name=="Elizabeth A. Warren"], by=list(Category=MAsen$xwalk[MAsen$name=="Elizabeth A. Warren"]), FUN=sum)
colnames(warren) <- c("Town", "Votes for Elizabeth A. Warren")
#Summing votes in each precinct for Geoff Diehl
diehl<-aggregate(MAsen$votes[MAsen$name=="Geoff Diehl"], by=list(Category=MAsen$xwalk[MAsen$name=="Geoff Diehl"]), FUN=sum)
colnames(diehl) <- c("Town", "Votes for Geoff Diehl")
#Summing total votes in each precinct (pretending the only two candidates were Warren and Diehl)
total<-aggregate((MAsen$votes), by=list(Category=MAsen$xwalk), FUN=sum)
colnames(total) <- c("Town", "Total Votes")
#Calculating proportions of votes in each town
warrenproportion <- warren$`Votes for Elizabeth A. Warren`/total$`Total Votes` * 100
warrenproportion <- round(warrenproportion,1)
diehlproportion <- diehl$`Votes for Geoff Diehl`/total$`Total Votes` * 100
diehlproportion <- round(diehlproportion,1)
votes<-cbind(warren$`Town`,warren$`Votes for Elizabeth A. Warren`,diehl$`Votes for Geoff Diehl`,total$`Total Votes`, warrenproportion,diehlproportion)
colnames(votes) <- c("xwalk", "Votes for Elizabeth A. Warren", "Votes for Geoff Diehl", "Total Votes", "Percentage of Votes for Warren", "Percentage of Votes for Diehl")
#Attribute joining precinct vote data to GIS data
magis@data<-left_join(magis@data,pxwalk,by=c('WP_NAME'='gis_precincts'))
votes<-as.data.frame(votes)
magis@data<-left_join(magis@data,votes,by=c('medsl_precinct_1'='xwalk'))
#Mapping
#magis@data<-rbind(magis@data[1:2033,],magis@data[2035:2152,],magis@data[2034,])
#magis@data<-magis@data[order(magis@data$`Percentage of Votes for Warren`),]
magis@data$`Percentage of Votes for Warren`<-gsub(100,NA,magis@data$`Percentage of Votes for Warren`)
MyPal <- c('#FFCBCB','#CCE5FF','#3399FF','#1F52FC','#0000CC')
tm_shape(magis)+
tm_polygons("Percentage of Votes for Warren", id=c("WP_NAME"), palette=MyPal, popup.vars=c("% of votes for Elizabeth Warren"="Percentage of Votes for Warren", "# of votes for Elizabeth Warren"="Votes for Elizabeth A. Warren", "# of votes for Geoff Diehl"="Votes for Geoff Diehl"),legend.show=FALSE)+
tmap_options(max.categories = 5)
tmap_mode("view")
tmap_last()
#Loading in a precincts crosswalk file I created between Mass state shapefile data and cleaned MEDSL Mass data:
pxwalk <- read.csv("crosswalk.csv")
#Reading in and exploring shape file/GIS data from Mass Gov:
setwd("C:/Users/User/Documents/GitHub/elections-map/elections-map/wardsprecincts_poly")
magis <- readOGR("WARDSPRECINCTS_POLY.shp")
magis@data
#Now let's subset out US Senate data, of which election results are what we focus on in this project:
MAsen <- fed[fed$office=="US Senate" & (fed$name=="Elizabeth A. Warren" | fed$name=="Geoff Diehl"),]
#NOTE: In orer to simplify the visualisation process, I removed data regarding votes for the independent senate candidate, blank votes, and votes titled "all other". Treating the race as a purely bipartisan and only looking at the subset of people who voted for Warren or Diehl race may lead to inaccuracies or misleading ideas, but the median percentage of votes that didn't go to these two candidates per town is 5.2% which is low and may not affect results too heavily.
#Creating variable to join with crosswalk and shape file
WP <- case_when(!MAsen$ward=="-" ~ paste(MAsen$ward,MAsen$precinct,sep="-"),
TRUE ~ as.character(MAsen$precinct))
MAsen$xwalk<-paste(MAsen$town,WP,sep=" ")
#Summing votes in each precinct for Elizabeth Warren
warren<-aggregate(MAsen$votes[MAsen$name=="Elizabeth A. Warren"], by=list(Category=MAsen$xwalk[MAsen$name=="Elizabeth A. Warren"]), FUN=sum)
colnames(warren) <- c("Town", "Votes for Elizabeth A. Warren")
#Summing votes in each precinct for Geoff Diehl
diehl<-aggregate(MAsen$votes[MAsen$name=="Geoff Diehl"], by=list(Category=MAsen$xwalk[MAsen$name=="Geoff Diehl"]), FUN=sum)
colnames(diehl) <- c("Town", "Votes for Geoff Diehl")
#Summing total votes in each precinct (pretending the only two candidates were Warren and Diehl)
total<-aggregate((MAsen$votes), by=list(Category=MAsen$xwalk), FUN=sum)
colnames(total) <- c("Town", "Total Votes")
#Calculating proportions of votes in each town
warrenproportion <- warren$`Votes for Elizabeth A. Warren`/total$`Total Votes` * 100
warrenproportion <- round(warrenproportion,1)
diehlproportion <- diehl$`Votes for Geoff Diehl`/total$`Total Votes` * 100
diehlproportion <- round(diehlproportion,1)
votes<-cbind(warren$`Town`,warren$`Votes for Elizabeth A. Warren`,diehl$`Votes for Geoff Diehl`,total$`Total Votes`, warrenproportion,diehlproportion)
colnames(votes) <- c("xwalk", "Votes for Elizabeth A. Warren", "Votes for Geoff Diehl", "Total Votes", "Percentage of Votes for Warren", "Percentage of Votes for Diehl")
#Attribute joining precinct vote data to GIS data
magis@data<-left_join(magis@data,pxwalk,by=c('WP_NAME'='gis_precincts'))
votes<-as.data.frame(votes)
magis@data<-left_join(magis@data,votes,by=c('medsl_precinct_1'='xwalk'))
#Mapping
#magis@data<-rbind(magis@data[1:2033,],magis@data[2035:2152,],magis@data[2034,])
#magis@data<-magis@data[order(magis@data$`Percentage of Votes for Warren`),]
magis@data$`Percentage of Votes for Warren`<-gsub(100,NA,magis@data$`Percentage of Votes for Warren`)
MyPal <- c('#FFCBCB','#CCE5FF','#3399FF','#1F52FC','#0000CC')
tm_shape(magis)+
tm_polygons("Percentage of Votes for Warren", id=c("WP_NAME"), palette=MyPal, popup.vars=c("% of votes for Elizabeth Warren"="Percentage of Votes for Warren", "# of votes for Elizabeth Warren"="Votes for Elizabeth A. Warren", "# of votes for Geoff Diehl"="Votes for Geoff Diehl"),legend.show=FALSE)+
tmap_options(max.categories = 5)
tmap_mode("view")
tmap_last()
#Let's start by setting up working directories and loading in files.
#Load in raw precinct voting data for US senate and house from MA state:
setwd("C:/Users/User/Documents/GitHub/elections-map/elections-map")
fed <- read.csv("mass_federal.csv")
#Loading in a precincts crosswalk file I created between Mass state shapefile data and cleaned MEDSL Mass data:
pxwalk <- read.csv("crosswalk.csv")
#Reading in and exploring shape file/GIS data from Mass Gov:
setwd("C:/Users/User/Documents/GitHub/elections-map/elections-map/wardsprecincts_poly")
magis <- readOGR("WARDSPRECINCTS_POLY.shp")
magis@data
#Now let's subset out US Senate data, of which election results are what we focus on in this project:
MAsen <- fed[fed$office=="US Senate" & (fed$name=="Elizabeth A. Warren" | fed$name=="Geoff Diehl"),]
#NOTE: In orer to simplify the visualisation process, I removed data regarding votes for the independent senate candidate, blank votes, and votes titled "all other". Treating the race as a purely bipartisan and only looking at the subset of people who voted for Warren or Diehl race may lead to inaccuracies or misleading ideas, but the median percentage of votes that didn't go to these two candidates per town is 5.2% which is low and may not affect results too heavily.
#Creating variable to join with crosswalk and shape file
WP <- case_when(!MAsen$ward=="-" ~ paste(MAsen$ward,MAsen$precinct,sep="-"),
TRUE ~ as.character(MAsen$precinct))
MAsen$xwalk<-paste(MAsen$town,WP,sep=" ")
#Summing votes in each precinct for Elizabeth Warren
warren<-aggregate(MAsen$votes[MAsen$name=="Elizabeth A. Warren"], by=list(Category=MAsen$xwalk[MAsen$name=="Elizabeth A. Warren"]), FUN=sum)
colnames(warren) <- c("Town", "Votes for Elizabeth A. Warren")
#Summing votes in each precinct for Geoff Diehl
diehl<-aggregate(MAsen$votes[MAsen$name=="Geoff Diehl"], by=list(Category=MAsen$xwalk[MAsen$name=="Geoff Diehl"]), FUN=sum)
colnames(diehl) <- c("Town", "Votes for Geoff Diehl")
#Summing total votes in each precinct (pretending the only two candidates were Warren and Diehl)
total<-aggregate((MAsen$votes), by=list(Category=MAsen$xwalk), FUN=sum)
colnames(total) <- c("Town", "Total Votes")
#Calculating proportions of votes in each town
warrenproportion <- warren$`Votes for Elizabeth A. Warren`/total$`Total Votes` * 100
warrenproportion <- round(warrenproportion,1)
diehlproportion <- diehl$`Votes for Geoff Diehl`/total$`Total Votes` * 100
diehlproportion <- round(diehlproportion,1)
votes<-cbind(warren$`Town`,warren$`Votes for Elizabeth A. Warren`,diehl$`Votes for Geoff Diehl`,total$`Total Votes`, warrenproportion,diehlproportion)
colnames(votes) <- c("xwalk", "Votes for Elizabeth A. Warren", "Votes for Geoff Diehl", "Total Votes", "Percentage of Votes for Warren", "Percentage of Votes for Diehl")
#Attribute joining precinct vote data to GIS data
magis@data<-left_join(magis@data,pxwalk,by=c('WP_NAME'='gis_precincts'))
votes<-as.data.frame(votes)
magis@data<-left_join(magis@data,votes,by=c('medsl_precinct_1'='xwalk'))
#Mapping
#magis@data<-rbind(magis@data[1:2033,],magis@data[2035:2152,],magis@data[2034,])
#magis@data<-magis@data[order(magis@data$`Percentage of Votes for Warren`),]
magis@data$`Percentage of Votes for Warren`<-gsub(100,NA,magis@data$`Percentage of Votes for Warren`)
MyPal <- c('#FFCBCB','#CCE5FF','#3399FF','#1F52FC','#0000CC')
tm_shape(magis)+
tm_polygons("Percentage of Votes for Warren", id=c("WP_NAME"), palette=MyPal, popup.vars=c("% of votes for Elizabeth Warren"="Percentage of Votes for Warren", "# of votes for Elizabeth Warren"="Votes for Elizabeth A. Warren", "# of votes for Geoff Diehl"="Votes for Geoff Diehl"),legend.show=FALSE)+
tmap_options(max.categories = 5)
tmap_mode("view")
tmap_last()
tm_shape(magis)+
tm_polygons("Percentage of Votes for Warren", id=c("WP_NAME"), palette=MyPal, popup.vars=c("% of votes for Elizabeth Warren"="Percentage of Votes for Warren", "# of votes for Elizabeth Warren"="Votes for Elizabeth A. Warren", "# of votes for Geoff Diehl"="Votes for Geoff Diehl"),legend.show=FALSE)+
tmap_options(max.categories = 5)
htmlwidgets::saveWidget(lf, "C:/Users/User/Documents/Github/elections-map/elections-map/elections-map.html", selfcontained = F)
map <- tm_shape(magis)+
tm_polygons("Percentage of Votes for Warren", id=c("WP_NAME"), palette=MyPal, popup.vars=c("% of votes for Elizabeth Warren"="Percentage of Votes for Warren", "# of votes for Elizabeth Warren"="Votes for Elizabeth A. Warren", "# of votes for Geoff Diehl"="Votes for Geoff Diehl"),legend.show=FALSE)+
tmap_options(max.categories = 5)
htmlwidgets::saveWidget(map, "C:/Users/User/Documents/Github/elections-map/elections-map/elections-map.html", selfcontained = F)
View(map)
tmap_save(map, filename=elections-map.html)
tmap_save(map, filename=electionsmap.html)
tmap_save(map, filename="elections-map.html")
setwd("C:/Users/User/Documents/GitHub/elections-map/elections-map")
tmap_save(map, filename="elections-map.html")
