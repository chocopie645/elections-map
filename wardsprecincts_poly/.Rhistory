ma$name<-gsub("Jr", "Jr.", ma$name)
ma$name<-gsub("Jr..", "Jr.", ma$name)
colnames(ma)[colnames(ma)=="name"] <- "candidate"
unique(ma$candidate)
ma$dataverse <- NA
ma$dataverse = case_when((ma$office == "US House" ~ "house"),
(ma$office == "US Senate" ~ "senate"),
(TRUE ~ "state"))
ma$party<-gsub("democratic","democrat",ma$party)
unique(ma$party)
unique(ma$district)
ma$district<-gsub("Governor_s", "Governor's", ma$district)
ma$district<-gsub("_", " ", ma$district)
as.character(ma$district)
ma$year <- "2018"
ma$stage<- "gen"
ma$state <- "Massachusetts"
ma$special <- "FALSE"
ma$writein <- "FALSE"
ma$state_po <- "MA"
ma$state_fips <- "25"
ma$state_cen <- "14"
ma$state_ic <- "3"
unique(ma$office)
ma$district = case_when(str_detect(ma$office, "US Senate|Governor|Secretary of the Commonwealth|Attorney General|State Auditor|State Treasurer") & !(str_detect(ma$district, "Governor's Council")) ~ "statewide",
TRUE ~ as.character(ma$district))
ma$district = str_replace_all(ma$district, "Governor's Council General Election 1st District including precincts", "1")
ma$district = str_replace_all(ma$district, "Governor's Council General Election 2nd District including precincts", "2")
ma$district = str_replace_all(ma$district, "Governor's Council General Election 3rd District including precincts", "3")
ma$district = str_replace_all(ma$district, "Governor's Council General Election 4th District including precincts", "4")
ma$district = str_replace_all(ma$district, "Governor's Council General Election 5th District including precincts", "5")
ma$district = str_replace_all(ma$district, "Governor's Council General Election 6th District including precincts", "6")
ma$district = str_replace_all(ma$district, "Governor's Council General Election 7th District including precincts", "7")
ma$district = str_replace_all(ma$district, "Governor's Council General Election 8th District including precincts", "8")
ma[is.na(ma)]   <- ""
MA <- ma %>% select(precinct, office, party, mode, votes, jurisdiction, county, candidate, district, dataverse, year, stage, state, special, writein, state_po, state_fips, state_cen, state_ic)
setwd("~/GitHub/2018-precincts/MA")
xwalk<-read.csv("ma-county-crosswalk.csv")
xwalk<-xwalk[,1:2]
xwalk$county<-as.character(xwalk$county)
xwalk$jurisdiction<-as.character(xwalk$jurisdiction)
MA1<-left_join(MA,xwalk,by="jurisdiction")
colnames(MA1)[colnames(MA1)=="county.y"] <- "county"
MA <- MA1 %>% select(precinct, office, party, mode, votes, jurisdiction, county, candidate, district, dataverse, year, stage, state, special, writein, state_po, state_fips, state_cen, state_ic)
typeof(MA$candidate)
MA$candidate = (gsub("(Sonia Rosa Chang).*","Sonia Chang-Diaz",MA$candidate))
MA$candidate = (gsub("(William \"Smitty\" Pignatelli)", "William 'Smitty' Pignatelli",MA$candidate))
MA$precinct = case_when(!ma$ward=="-" ~ paste(ma$ward,MA$precinct,sep="-"),
TRUE ~ as.character(MA$precinct))
write.csv(x = MA,
file = "2018-ma-precinct.csv",
row.names = FALSE)
write.csv(x = MA,
file = "2018-MA-precinct.csv",
row.names = FALSE)
unique(MA$precinct)
paste((unique(MA$jurisdiction)),unique(MA$precinct))
length(paste((unique(MA$jurisdiction)),unique(MA$precinct)))
sort(paste((unique(MA$jurisdiction)),unique(MA$precinct)))
sort(paste((unique(MA$jurisdiction)),(MA$precinct)))
paste((unique(MA$jurisdiction)),(MA$precinct)))
paste((unique(MA$jurisdiction)),(MA$precinct))
sort(paste((unique(MA$jurisdiction)),(MA$precinct)))
sort(paste((MA$jurisdiction)),(MA$precinct))
paste((MA$jurisdiction)),(MA$precinct))
paste(MA$jurisdiction,MA$precinct)
unique(paste(MA$jurisdiction,MA$precinct))
sort(unique(paste(MA$jurisdiction,MA$precinct)))
medslprecincts<-sort(unique(paste(MA$jurisdiction,MA$precinct)))
gisprecincts<-sort(unique(magis@data$WP_NAME))
cbind(medslprecincts,gisprecints)
cbind(medslprecincts,gisprecincts)
pxwalk<-cbind(medslprecincts,gisprecincts)
View(pxwalk)
View(pxwalk)
sort(unique(paste(MA$jurisdiction,MA$precinct)))
sort(unique(magis@data$WP_NAME))
is.factor(meds)
is.factor(medslprecincts)
is.factor(gisprecincts)
as.factor(medslprecincts)
pxwalk<-cbind(medslprecincts,gisprecincts)
pxwalk<-cbind(medslprecincts,gisprecincts)
pxwalk<-cbind(gisprecints,medslprecincts)
gisprecincts<-sort(unique(magis@data$WP_NAME))
pxwalk<-cbind(gisprecints,medslprecincts)
View(pxwalk)
pxwalk<-data.frame()
pxwalk<-cbind(gisprecints,medslprecincts)
gisprecincts<-sort(unique(magis@data$WP_NAME))
pxwalk<-cbind(gisprecints,medslprecincts)
pxwalk<-cbind(gisprecincts,medslprecincts)
pxwalk<-(gisprecincts)
pxwalk<-cbind(pxwalk,medslprecints)
pxwalk<-cbind(pxwalk,medslprecincts)
pxwalk<-(gisprecincts)
pxwalk$medslprecints<-medslprecincts
pxwalk<-data.frame(medslprecincts,gisprecincts)
length(MA$precinct)
length(MA$jurisdiction)
medslprecincts
is.vector(medslprecincts)
is.vector(gisprecincts)
as.vector(gisprecincts)
pxwalk<-cbind(medslprecincts,gisprecincts)
pxwalk<-cbind.na(medslprecincts,gisprecincts)
install.packages("qpcR")
library(qpcR)
library(qpcR)
pxwalk<-cbind.na(medslprecincts,gisprecincts)
library(qpcR)
pxwalk<-qcR:::cbind.na(medslprecincts,gisprecincts)
pxwalk<-qpcR:::cbind.na(medslprecincts,gisprecincts)
as.factor(medslprecincts)
as.vector(medslprecincts)
view(medslprecints)
view(medslprecincts)
view(gisprecincts)
view(medslprecincts)
view(gisprecincts)
pxwalk<-cbind(medslprecincts,gisprecincts)
pxwalk<-cbind.data.frame(medslprecincts,gisprecincts)
View(pxwalk)
pxwalk<-data.frame(x=medslprecincts,y=gisprecincts)
View(pxwalk)
data.frame(medslprecincts,gisprecincts)
setwd("C:/Users/User/Documents/MA_project")
write.csv(x = gisprecincts,
file = "gisprecicts.csv",
row.names = FALSE)
write.csv(x = medslprecincts,
file = "medslprecicts.csv",
row.names = FALSE)
medsl <- read.csv("2018-ma-precinct.csv")
#Setting up working directories and loading in files
setwd("~/GitHub/2018-precincts/MA")
medsl <- read.csv("2018-ma-precinct.csv")
setwd("C:/Users/User/Documents/MA_project")
setwd("C:/Users/User/Documents/MA_project")
#Below is a precincts crosswalk file I created between Mass state shapefile data and cleaned MEDSL Mass data
pxwalk <- read.csv("precincts_crosswalk.csv")
#Reading in shape file/GIS data
magis <- readOGR("WARDSPRECINCTS_POLY.shp")
library(rgdal)
library(tidyverse)
library(dplyr)
library(stringr)
library(tmap)
library(tmaptools)
library(shinyjs)
library(RColorBrewer)
library(qpcR)
#Reading in shape file/GIS data
magis <- readOGR("WARDSPRECINCTS_POLY.shp")
#Reading in shape file/GIS data
magis <- readOGR("WARDSPRECINCTS_POLY.shp")
#Reading in shape file/GIS data
magis <- readOGR("WARDSPRECINCTS_POLY.shp")
setwd("C:/Users/User/Documents/MA_project")
#Reading in shape file/GIS data
magis <- readOGR("WARDSPRECINCTS_POLY.shp")
library(rgdal)
library(tidyverse)
library(dplyr)
library(stringr)
library(tmap)
library(tmaptools)
library(shinyjs)
library(RColorBrewer)
library(qpcR)
#Reading in shape file/GIS data
magis <- readOGR("WARDSPRECINCTS_POLY.shp")
#Reading in shape file/GIS data
setwd("C:/Users/User/Documents/MA_project/wardsprecincts_poly")
magis <- readOGR("WARDSPRECINCTS_POLY.shp")
#Loading in libraries
library(rgdal)
library(tidyverse)
library(dplyr)
library(stringr)
library(tmap)
library(tmaptools)
library(shinyjs)
library(RColorBrewer)
library(qpcR)
#Setting up working directories and loading in files
setwd("~/GitHub/2018-precincts/MA")
#Below is data I wrangled and cleaned as a researcher for MEDSL. Code can be found HERE (PASTE CODE ON GITHUB)
medsl <- read.csv("2018-ma-precinct.csv")
setwd("C:/Users/User/Documents/MA_project")
#Below is a precincts crosswalk file I created between Mass state shapefile data and cleaned MEDSL Mass data
pxwalk <- read.csv("precincts_crosswalk.csv")
#Reading in shape file/GIS data
setwd("C:/Users/User/Documents/MA_project/wardsprecincts_poly")
magis <- readOGR("WARDSPRECINCTS_POLY.shp")
magis@data
View(medsl)
#Subsetting US Senate data
MAsen <- MA[MA$office=="US Senate" & (MA$candidate=="Elizabeth A. Warren" | MA$candidate=="Geoff Diehl"),]
#Subsetting US Senate data
MAsen <- medsl[medsl$office=="US Senate" & (medsl$candidate=="Elizabeth A. Warren" | medsl$candidate=="Geoff Diehl"),]
View(MAsen)
View(pxwalk)
fed <- read.csv("mass_federal.csv")
#However, the raw state data is more suitable for this ......
setwd("~/GitHub/2018-precincts/MA/raw")
fed <- read.csv("mass_federal.csv")
View(fed)
#Subsetting US Senate data
MAsen <- fed[fed$office=="US Senate" & (fed$name=="Elizabeth A. Warren" | fed$name=="Geoff Diehl"),]
View(MAsen)
View(MAsen)
View(MAsen)
case_when(!MAsen=="-" ~ paste(MAsen$ward,MAsen$precinct),
TRUE ~ as.character(MAsen$precinct))
if (!MAsen=="-") {
paste(MAsen$ward,MAsen$precinct)
} else {
as.character(MAsen$precinct)
}
MAsen$WP <- if (!MAsen=="-") {
paste(MAsen$ward,MAsen$precinct,sep="")
} else {
as.character(MAsen$precinct)
}
MAsen$WP == if (!MAsen=="-") {
paste(MAsen$ward,MAsen$precinct,sep="")
} else {
as.character(MAsen$precinct)
}
MAsen$WP = if (!MAsen=="-") {
paste(MAsen$ward,MAsen$precinct,sep="")
} else {
as.character(MAsen$precinct)
}
MAsen$WP <-
(if (!MAsen=="-") {
paste(MAsen$ward,MAsen$precinct,sep="")
} else {
as.character(MAsen$precinct)
}
)
case_when(!MAsen$ward=="-" ~ paste(MAsen$ward,MAsen$precinct,sep=""),
TRUE ~ as.character(MAsen$precinct))
MAsen$WP <- case_when(!MAsen$ward=="-" ~ paste(MAsen$ward,MAsen$precinct,sep="-"),
TRUE ~ as.character(MAsen$precinct))
View(medsl)
View(MAsen)
#Loading in libraries
library(rgdal)
library(tidyverse)
library(dplyr)
library(stringr)
library(tmap)
library(tmaptools)
library(shinyjs)
library(RColorBrewer)
library(qpcR)
#Setting up working directories and loading in files
setwd("~/GitHub/2018-precincts/MA")
#Below is data I wrangled and cleaned as a researcher for MEDSL. Code can be found HERE (PASTE CODE ON GITHUB)
medsl <- read.csv("2018-ma-precinct.csv")
#However, the raw state data is more suitable for this ......
setwd("~/GitHub/2018-precincts/MA/raw")
fed <- read.csv("mass_federal.csv")
setwd("C:/Users/User/Documents/MA_project")
#Below is a precincts crosswalk file I created between Mass state shapefile data and cleaned MEDSL Mass data
pxwalk <- read.csv("precincts_crosswalk.csv")
#Reading in and exploring shape file/GIS data
setwd("C:/Users/User/Documents/MA_project/wardsprecincts_poly")
magis <- readOGR("WARDSPRECINCTS_POLY.shp")
magis@data
#Subsetting US Senate data
MAsen <- fed[fed$office=="US Senate" & (fed$name=="Elizabeth A. Warren" | fed$name=="Geoff Diehl"),]
#NOTE: In orer to simplify the visualisation process, I removed data regarding votes for the independent senate candidate, blank votes, and votes titled "all other". Treating the race as a purely bipartisan and only looking at the subset of people who voted for Warren or Diehl race may lead to inaccuracies or misleading ideas, but the median percentage of votes that didn't go to these two candidates per town is 5.2% which is low and may not affect results too heavily.
WP <- case_when(!MAsen$ward=="-" ~ paste(MAsen$ward,MAsen$precinct,sep="-"),
TRUE ~ as.character(MAsen$precinct))
MAsen$xwalk<-paste(MAsen$town,WP,sep=" ")
MAsen$xwalk==pxwalk$medsl_precinct_1
sort(unique(MAsen$xwalk))==pxwalk$medsl_precinct_1
sort(unique(MAsen$xwalk))
sort(unique(MAsen$xwalk))==pxwalk$medsl_precinct_1
warren<-aggregate(MAsen$votes[MAproject$candidate=="Elizabeth A. Warren"], by=list(Category=MAsen$xwalk[MAproject$candidate=="Elizabeth A. Warren"]), FUN=sum)
#Summing votes in each town for Elizabeth Warren
warren<-aggregate(MAsen$votes[MAsen$candidate=="Elizabeth A. Warren"], by=list(Category=MAsen$xwalk[MAsen$candidate=="Elizabeth A. Warren"]), FUN=sum)
#Summing votes in each town for Elizabeth Warren
warren<-aggregate(MAsen$votes[MAsen$name=="Elizabeth A. Warren"], by=list(Category=MAsen$xwalk[MAsen$name=="Elizabeth A. Warren"]), FUN=sum)
View(warren)
diehl<-aggregate(MAsen$votes[MAsen$name=="Geoff Diehl"], by=list(Category=MAsen$xwalk[MAsen$name=="Geoff Diehl"]), FUN=sum)
#Summing total votes in each precinct
total<-aggregate((MAsen$votes), by=list(Category=MAsen$xwalk), FUN=sum)
#Summing votes in each precinct for Elizabeth Warren
warren<-aggregate(MAsen$votes[MAsen$name=="Elizabeth A. Warren"], by=list(Category=MAsen$xwalk[MAsen$name=="Elizabeth A. Warren"]), FUN=sum)
colnames(warren) <- c("Town", "Votes for Elizabeth A. Warren")
#Summing votes in each precinct for Geoff Diehl
diehl<-aggregate(MAsen$votes[MAsen$name=="Geoff Diehl"], by=list(Category=MAsen$xwalk[MAsen$name=="Geoff Diehl"]), FUN=sum)
colnames(diehl) <- c("Town", "Votes for Geoff Diehl")
#Summing total votes in each precinct
total<-aggregate((MAsen$votes), by=list(Category=MAsen$xwalk), FUN=sum)
colnames(total) <- c("Town", "Total Votes")
View(warren)
#Calculating proportions of votes in each town
warrenproportion <- warren$`Votes for Elizabeth A. Warren`/total$`Total Votes` * 100
diehlproportion <- diehl$`Votes for Geoff Diehl`/total$`Total Votes` * 100
warrenproportion + diehlproportion
votes<-cbind(warren$`Votes for Elizabeth A. Warren`,diehl$`Votes for Geoff Diehl`,total$`Total Votes`, warrenproportion,diehlproportion)
View(votes)
colnames(votes) <- c("Votes for Elizabeth A. Warren", "Votes for Geoff Diehl", "Total Votes", "Percentage of Total Votes for Warren", "Percentage of Total Votes for Diehl")
View(votes)
colnames(votes) <- c("Votes for Elizabeth A. Warren", "Votes for Geoff Diehl", "Total Votes", "Percentage of Total Votes for Warren", "Percentage of Total Votes for Diehl")
View(votes)
colnames(votes) <- c("xwalk", "Votes for Elizabeth A. Warren", "Votes for Geoff Diehl", "Total Votes", "Percentage of Total Votes for Warren", "Percentage of Total Votes for Diehl")
votes<-cbind(warren$`Town`,warren$`Votes for Elizabeth A. Warren`,diehl$`Votes for Geoff Diehl`,total$`Total Votes`, warrenproportion,diehlproportion)
colnames(votes) <- c("xwalk", "Votes for Elizabeth A. Warren", "Votes for Geoff Diehl", "Total Votes", "Percentage of Total Votes for Warren", "Percentage of Total Votes for Diehl")
View(votes)
round(warrenproportion,1)
warrenproportion <- round(warrenproportion,1)
diehlproportion <- round(diehlproportion,1)
votes<-cbind(warren$`Town`,warren$`Votes for Elizabeth A. Warren`,diehl$`Votes for Geoff Diehl`,total$`Total Votes`, warrenproportion,diehlproportion)
colnames(votes) <- c("xwalk", "Votes for Elizabeth A. Warren", "Votes for Geoff Diehl", "Total Votes", "Percentage of Total Votes for Warren", "Percentage of Total Votes for Diehl")
View(votes)
left_join(votes,pxwalk,by=c('xwalk'='medsl_precinct_1'))
?left
?left_join
inner_join(votes,pxwalk,by=c('xwalk'='medsl_precinct_1'))
as.character(votes$xwalk)
as.character(votes)
inner_join(votes,pxwalk,by=c('xwalk'='medsl_precinct_1'))
inner_join(votes,pxwalk,by=c('xwalk'='medsl_precinct_1'))
as.matrix(pxwalk)
pxwalk<-as.matrix(pxwalk)
inner_join(votes,pxwalk,by=c('xwalk'='medsl_precinct_1'))
inner_join(votes,pxwalk,by=c('xwalk'='medsl_precinct_1'))
votes <- votes %>%
mutate(xwalk = as.character(xwalk))
votes <- votes %>%
mutate(xwalk = as.character(xwalk))
#Loading in libraries
library(rgdal)
library(tidyverse)
library(dplyr)
library(stringr)
library(tmap)
library(tmaptools)
library(shinyjs)
library(RColorBrewer)
#Setting up working directories and loading in files
setwd("~/GitHub/2018-precincts/MA")
#Below is data I wrangled and cleaned as a researcher for MEDSL. Code can be found HERE (PASTE CODE ON GITHUB)
medsl <- read.csv("2018-ma-precinct.csv")
#However, the raw state data is more suitable for this ......
setwd("~/GitHub/2018-precincts/MA/raw")
fed <- read.csv("mass_federal.csv")
#Below is a precincts crosswalk file I created between Mass state shapefile data and cleaned MEDSL Mass data
setwd("C:/Users/User/Documents/MA_project")
pxwalk <- read.csv("precincts_crosswalk.csv")
#Reading in and exploring shape file/GIS data
setwd("C:/Users/User/Documents/MA_project/wardsprecincts_poly")
magis <- readOGR("WARDSPRECINCTS_POLY.shp")
magis@data
#Subsetting US Senate data
MAsen <- fed[fed$office=="US Senate" & (fed$name=="Elizabeth A. Warren" | fed$name=="Geoff Diehl"),]
#NOTE: In orer to simplify the visualisation process, I removed data regarding votes for the independent senate candidate, blank votes, and votes titled "all other". Treating the race as a purely bipartisan and only looking at the subset of people who voted for Warren or Diehl race may lead to inaccuracies or misleading ideas, but the median percentage of votes that didn't go to these two candidates per town is 5.2% which is low and may not affect results too heavily.
#Creating variable to join with crosswalk and shape file
WP <- case_when(!MAsen$ward=="-" ~ paste(MAsen$ward,MAsen$precinct,sep="-"),
TRUE ~ as.character(MAsen$precinct))
MAsen$xwalk<-paste(MAsen$town,WP,sep=" ")
#Summing votes in each precinct for Elizabeth Warren
warren<-aggregate(MAsen$votes[MAsen$name=="Elizabeth A. Warren"], by=list(Category=MAsen$xwalk[MAsen$name=="Elizabeth A. Warren"]), FUN=sum)
colnames(warren) <- c("Town", "Votes for Elizabeth A. Warren")
#Summing votes in each precinct for Geoff Diehl
diehl<-aggregate(MAsen$votes[MAsen$name=="Geoff Diehl"], by=list(Category=MAsen$xwalk[MAsen$name=="Geoff Diehl"]), FUN=sum)
colnames(diehl) <- c("Town", "Votes for Geoff Diehl")
#Summing total votes in each precinct
total<-aggregate((MAsen$votes), by=list(Category=MAsen$xwalk), FUN=sum)
colnames(total) <- c("Town", "Total Votes")
#Calculating proportions of votes in each town
warrenproportion <- warren$`Votes for Elizabeth A. Warren`/total$`Total Votes` * 100
warrenproportion <- round(warrenproportion,1)
diehlproportion <- diehl$`Votes for Geoff Diehl`/total$`Total Votes` * 100
diehlproportion <- round(diehlproportion,1)
#Finalising votes data
votes<-cbind(warren$`Town`,warren$`Votes for Elizabeth A. Warren`,diehl$`Votes for Geoff Diehl`,total$`Total Votes`, warrenproportion,diehlproportion)
colnames(votes) <- c("xwalk", "Votes for Elizabeth A. Warren", "Votes for Geoff Diehl", "Total Votes", "Percentage of Total Votes for Warren", "Percentage of Total Votes for Diehl")
inner_join(votes,pxwalk,by=c('xwalk'='medsl_precinct_1'))
magis@data<-left_join(magis@data,pxwalk,by=c('WP_NAME'='gis_precincts'))
View(magis)
View(magis@data)
magis@data<-left_join(magis@data,votes,by=c('medsl_precincts_1'='xwalk'))
votes <- votes %>%
mutate(xwalk = as.matrix(xwalk))
votes <- votes %>%
mutate(xwalk = as.matrix(xwalk))
typeof(xwalk)
typeof(votes$xwalk)
typeof(votes)
votes <- votes %>%
mutate(votes = as.matrix(votes))
as.matrix(votes)
votes<-as.matrix(votes)
magis@data<-left_join(magis@data,votes,by=c('medsl_precincts_1'='xwalk'))
votes<-as.data.frame(votes)
magis@data<-left_join(magis@data,votes,by=c('medsl_precincts_1'='xwalk'))
magis@data<-left_join(magis@data,votes,by=c('medsl_precinct_1'='xwalk'))
View(magis)
View(magis@data)
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren", id="gis_town_matched", breaks = c(0,12.5,25,37.5,50,62.5,75,87.5,100), palette = "RdBu")
tmap_mode("view")
tmap_last()
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren", id="gis_town_matched", breaks = c(0,12.5,25,37.5,50,62.5,75,87.5,100), palette = "RdBu")
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren", id="WP_NAME", breaks = c(0,12.5,25,37.5,50,62.5,75,87.5,100), palette = "RdBu")
#Mapping
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren", breaks=c(0,12.5,25,37.5,50,62.5,75,87.5,100), palette = "RdBu", id="WP_NAME")
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren", breaks=c(0,12.5,25,37.5,50,62.5,75,87.5,100), palette = brewer.pal(n = 8, name = "RdBu")
#Mapping
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren")
#Mapping
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren")
#Mapping
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren", breaks=c(0,12.5,25,37.5,50,62.5,75,87.5,100))
#Mapping
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren") +
tm_fill(breaks=c(0,12.5,25,37.5,50,62.5,75,87.5,100))
#Mapping
tm_shape(magis) +
tm_polygons() +
tm_fill(breaks=c(0,12.5,25,37.5,50,62.5,75,87.5,100))
#Mapping
tm_shape(magis) +
tm_fill(breaks=c(0,12.5,25,37.5,50,62.5,75,87.5,100)) +
tm_polygons("Percentage of Total Votes for Warren")
tm_polygons("Percentage of Total Votes for Warren",breaks=c(0,12.5,25,37.5,50,62.5,75,87.5,100)
\\
#Mapping
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren",breaks=c(0,12.5,25,37.5,50,62.5,75,87.5,100))
#Mapping
tm_shape(magis,breaks=c(0,12.5,25,37.5,50,62.5,75,87.5,100)) +
tm_polygons("Percentage of Total Votes for Warren",breaks=c(0,12.5,25,37.5,50,62.5,75,87.5,100))
#Mapping
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren",breaks=list(c(0,12.5,25,37.5,50,62.5,75,87.5,100)))
#Mapping
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren",breaks=list(NULL,c(0,12.5,25,37.5,50,62.5,75,87.5,100)))
#Mapping
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren",palette=list(n=8,"RdBu"))
#Mapping
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren",palette=list(n=8,"RdBu",free.scales=TRUE))
#Mapping
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren",palette=list(n=8,"RdBu") +
tm_facets(free.scales=TRUE))
#Mapping
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren",palette=list(c(n=8,"RdBu")) +
tm_facets(free.scales=TRUE))
#Mapping
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren",palette=("RdBu") +
tm_facets(free.scales=TRUE))
tm_polygons("Percentage of Total Votes for Warren",palette=("RdBu") +
tm_polygons("Percentage of Total Votes for Warren",palette=("RdBu")
tm_polygons("Percentage of Total Votes for Warren",palette=("RdBu")
#Mapping
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren",palette=("RdBu"))
#Mapping
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren",palette=("RdBu")) +
tmap_options(max.categories = 8)
#Mapping
tm_shape(magis) +
tm_polygons("Percentage of Total Votes for Warren",palette=("RdBu"),breaks=c(0,12.5,25,37.5,50,62.5,75,87.5,100)) +
tmap_options(max.categories = 8)
#Mapping
breaks<-c(0,12.5,25,37.5,50,62.5,75,87.5,100)
tm_shape(magis) +
tmap_options(max.categories = 8) +
tm_polygons("Percentage of Total Votes for Warren",palette=("RdBu"),breaks=breaks)
tm_shape(magis) +
tmap_options(max.categories = 8) +
tm_polygons("Percentage of Total Votes for Warren",palette=("RdBu"),breaks=breaks,style=quantile)
tm_shape(magis) +
tmap_options(max.categories = 8) +
tm_polygons(col = "Percentage of Total Votes for Warren",palette=("RdBu"),breaks=breaks,)
tm_shape(magis) +
tmap_options(max.categories = 8) +
tm_polygons("Percentage of Total Votes for Warren", id="medsl_precinct_1", palette=("RdBu"),breaks=breaks)
tm_shape(magis) +
tmap_options(max.categories = 4) +
tm_polygons("Percentage of Total Votes for Warren", id="medsl_precinct_1", palette=("RdBu"),breaks=breaks)
?sort
tm_layout() +
tm_shape(magis) +
tmap_options(max.categories = 8) +
tm_polygons("Percentage of Total Votes for Diehl", id="medsl_precinct_1", palette=("Greens"),breaks=breaks)
tm_layout() +
tm_shape(magis) +
tmap_options(max.categories = 8) +
tm_polygons("Percentage of Total Votes for Warren", id="medsl_precinct_1", palette=("Greens"),breaks=breaks)
